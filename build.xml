<?xml version="1.0" encoding="UTF-8"?>
<!--
You need to have the following environment variables set:

HADOOP_HOME
HADOOP_VERSION
CASCADING_HOME
CLOJURE_HOME

Note: It looks for clojure-contrib.jar in CLOJURE_HOME/clojure-contrib.jar by default 

-->


<project name="logparser" default="jar-with-manifest" basedir=".">

  <property file="build.properties" />
  <property environment="env"/>

  <property name="module.name" value="logparser"/>
  <property name="module.version" value="0.1"/>

  <property name="jar.repo" value="/Users/nmurray/programming/java/lib"/> <!-- todo -->

  <property name="cascading.home" location="${env.CASCADING_HOME}"/>
  <property name="cascading.version" value="1.0.16"/>
  <property name="cascading.filename.core" value="cascading-core-${cascading.version}.jar"/>
  <property name="cascading.filename.xml" value="cascading-xml-${cascading.version}.jar"/>
  <property name="cascading.libs" value="${cascading.home}/lib"/>
  <property name="cascading.libs.core" value="${cascading.libs}"/>
  <property name="cascading.libs.xml" value="${cascading.libs}/xml"/>

  <property name="cascading.path" value="${cascading.home}/"/>
  <property name="cascading.lib.core" value="${cascading.path}/${cascading.filename.core}"/>
  <property name="cascading.lib.xml" value="${cascading.path}/${cascading.filename.xml}"/>


 
  <property name="hadoop.home" value="${env.HADOOP_HOME}"/>
  <property name="hadoop.version" value="${env.HADOOP_VERSION}"/>
  <property name="clojure.home" value="${env.CLOJURE_HOME}"/>
  <property name="clojure.version" value="1.0.0"/>

  <property name="cascading.jar" value="${cascading.home}/cascading-${cascading.version}.jar"/>
  <property name="jgraph.jar" value="${jar.repo}/jgrapht-jdk1.6.jar"/>
  <property name="hadoop.jar" value="${hadoop.home}/hadoop-${hadoop.version}-core.jar"/>
  <property name="log4j.jar" value="${hadoop.home}/lib/log4j-1.2.15.jar"/>
  <property name="clojure.jar" value="${clojure.home}/clojure-${clojure.version}.jar"/>
  <property name="clojure-contrib.jar" value="${clojure.home}/clojure-contrib.jar"/>
  
  <property name="source.dir" value="${basedir}/src"/>
  <property name="target.dir" value="${basedir}/target"/>
  <property name="classes.dir" value="${target.dir}/classes"/>

  <property name="jar.file.name" value="${module.name}-${module.version}.jar"/>

  <path id="classpath">
    <path location="${clojure.jar}" />
    <path location="${clojure-contrib.jar}" />
    <path location="${hadoop.jar}" />
    <path location="${cascading.jar}" />
    <path location="${jgraph.jar}" />
    <path location="${source.dir}/clj" />
    <path location="${log4j.jar}" />
    <path location="${classes.dir}" />
  </path>

  <target name="compile" description="Run the Clojure Compiler">
    <property name="cpath" refid="classpath" />
    <echo message="cpath=${cpath}" />
    <mkdir dir="${classes.dir}"/>
    <java classname="clojure.lang.Compile" fork="true">
      <sysproperty key="clojure.compile.path" value="${classes.dir}" />
      <classpath refid="classpath" />
      <arg value="logparser.app" />
    </java>
  </target>

  <target name="jar" depends="compile" description="Build the JAR">
    <jar jarfile="${target.dir}/${jar.file.name}">
      <fileset dir="${classes.dir}" includes="**/*.class"/>
    </jar>
  </target>

  <target name="jar-with-manifest" depends="compile" description="Build the JAR">
    <manifest file="${target.dir}/MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}" />
      <attribute name="Main-Class" value="logparser.app" />
    </manifest>
    <jar jarfile="${target.dir}/${jar.file.name}" manifest="${target.dir}/MANIFEST.MF">
      <fileset dir="${classes.dir}" includes="**/*.class"/>
      <zipfileset src="${clojure.jar}" />
      <zipfileset src="${clojure-contrib.jar}" />
      <zipfileset src="${hadoop.jar}" />
      <zipfileset src="${cascading.jar}" />
      <zipfileset src="${jgraph.jar}" />
      <zipfileset src="${log4j.jar}" />
    </jar>
  </target>

  <target name="clean" description="Clean the output directory">
    <delete dir="${target.dir}"/>
  </target>

</project>
